@page "/movie"
@page "/movie/{id:int}"
@inject IMovieService MovieService
@inject NavigationManager NavigationManager

<a href="/movies" class="mb-2">&#60; Movies</a>
@if (Id is null) {
    NavigationManager.NavigateTo("movies");
}
else {
    <PageTitle>@_selectedMovie?.Name</PageTitle>
    <h2>@_selectedMovie?.Name</h2>
}

<EditForm class="d-flex flex-column" Model="_selectedMovie">
    <h5>Director</h5>
    <p>@_selectedMovie!.Director</p>
    <h5>Style</h5>
    <p>@_selectedMovie.Style</p>
    <h5>Description</h5>
    <p>@_selectedMovie!.Description</p>

    <div class="d-flex justify-content-between">
            <h3>Sessions</h3>
            <button class="btn btn-primary" @onclick="CreateSession">
                <i class="oi oi-plus p-1"></i>
                <span>Add Session</span>
            </button>
        </div>
    <table class="table table-hover">
        <thead>
        <tr>
            <th>Room</th>
            <th>Available tickets</th>
            <th>Start</th>
        </tr>
        </thead>
        <tbody>
        @if (_selectedMovie != null) {
            foreach (var session in _selectedMovie.Sessions) {
                <tr @onclick="() => ShowSession(session.Id)">
                    <th>@session.Room</th>
                    <th>@session.AvailableTickets</th>
                    <th>@session.DateTime</th>
                    <td>
                        <button class="btn btn-primary oi oi-pencil" @onclick:stopPropagation="true"
                                @onclick="() => EditSession(session.Id)">
                        </button>
                        <button class="btn btn-secondary oi oi-trash" @onclick:stopPropagation="true"
                                @onclick="() => DeleteSession(session.Id)">
                        </button>
                    </td>
                </tr>
            }
        }
        </tbody>
    </table>
</EditForm>

@code{

    [Parameter]
    public int? Id { get; set; }

    private Models.Movie? _selectedMovie = new();

    protected override async Task OnInitializedAsync() {
        if (Id is not null) {
            var result = await MovieService.GetMovieByIdAsync((int)Id).ConfigureAwait(false);
            if (result is not null) {
                _selectedMovie = result;
            }
            else
                NavigationManager.NavigateTo("/movie");
        }
    }

    private void ShowSession(int id) {
        NavigationManager.NavigateTo($"/session/{_selectedMovie!.Id}/{id}");
    }

    private void CreateSession() {
        NavigationManager.NavigateTo($"/session/create/{_selectedMovie!.Id}");
    }

    private void EditSession(int id) {
        NavigationManager.NavigateTo($"/session/edit/{_selectedMovie!.Id}/{id}");
    }

    private async Task DeleteSession(int id) {
        await MovieService.DeleteSessionAsync(id);
        _selectedMovie!.Sessions = await MovieService.GetSessionsAsync(_selectedMovie.Id);
    }
}