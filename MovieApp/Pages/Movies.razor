@page "/movies"
@inject IMovieService MovieService
@inject NavigationManager NavigationManager

<PageTitle>Movies</PageTitle>

<div>
    <div class="d-flex justify-content-between">
        <h3>Movies</h3>
        <button class="btn btn-primary" @onclick="CreateMovie">
            <i class="oi oi-plus p-1"></i>
            <span>Add Movie</span>
        </button>
    </div>
    @if (MovieService.Filter!.Length > 0) {
        <div class="d-flex align-items-center my-2">
            <span>Results for "@MovieService.Filter"</span>
            <button class="btn oi oi-circle-x" @onclick="() => MovieService.Filter = string.Empty"></button>
        </div>
    }
    <table class="table table-hover">
        <thead>
        <tr>
            <th>Name</th>
            <th>Director</th>
            <th>Style</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var movie in MovieService.Movies!) {
            <tr @onclick="() => ShowMovie(movie.Id)">
                <th>@movie.Name</th>
                <th>@movie.Director</th>
                <th>@movie.Style</th>
                <td>
                    <button class="btn btn-primary oi oi-pencil" @onclick:stopPropagation="true"
                            @onclick="() => EditMovie(movie.Id)">
                    </button>
                    <button class="btn btn-secondary oi oi-trash" @onclick:stopPropagation="true"
                            @onclick="() => DeleteMovie(movie.Id)">
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>

</div>

@code{

    protected override async Task OnInitializedAsync() {
        // if (MovieService.Filter!.Length == 0) 
            await MovieService.GetMoviesAsync();
        // else await MovieService.GetMoviesAsync(MovieService.Filter);
    }

    private void ShowMovie(int id) {
        NavigationManager.NavigateTo($"/movie/{id}");
    }

    private void CreateMovie() {
        NavigationManager.NavigateTo($"/movie/edit");
    }

    private void EditMovie(int id) {
        NavigationManager.NavigateTo($"/movie/edit/{id}");
    }

    private async Task DeleteMovie(int id) {
        await MovieService.DeleteMovieAsync(id);
        await MovieService.GetMoviesAsync();
    }

}